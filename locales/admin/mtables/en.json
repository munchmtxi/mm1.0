{
  "error": {
    "invalid_booking_details": "Invalid booking or restaurant ID provided.",
    "restaurant_id_required": "Restaurant ID is required.",
    "restaurant_not_found": "Restaurant not found.",
    "booking_not_found": "Booking not found.",
    "invalid_table": "Invalid or incompatible table ID provided.",
    "table_not_available": "The selected table is not available.",
    "booking_already_completed": "Booking is already completed.",
    "invalid_input": "Invalid input provided.",
    "permission_denied": "You do not have permission to perform this action.",
    "invalid_reason": "Reason must be less than 255 characters.",
    "invalid_min_capacity": "Minimum capacity must be at least {min}.",
    "invalid_max_capacity": "Maximum capacity cannot exceed {max}.",
    "invalid_location": "Invalid location type provided.",
    "invalid_gamification_action": "Invalid gamification action: {action}.",
    "invalid_gamification_values": "Points and wallet credit must be non-negative.",
    "max_waitlist_exceeded": "Waitlist limit cannot exceed {limit}.",
    "invalid_notification_interval": "Notification interval must be between 5 and 60 minutes.",
    "invalid_deposit_percentage": "Deposit percentage must be between {min}% and 100%.",
    "invalid_service_type": "Invalid service type provided.",
    "invalid_issue": "Invalid booking ID or resolution type provided.",
    "dispute_not_found": "Dispute not found or already resolved.",
    "no_pre_order": "No pre-order found for this booking.",
    "invalid_resolution_type": "Invalid resolution type provided.",
    "dispute_already_resolved": "Dispute already resolved or closed.",
    "invalid_description": "Resolution description must be less than 500 characters.",
    "merchant_id_required": "Merchant ID is required.",
    "merchant_not_found": "Merchant not found.",
    "merchant_already_active": "Merchant is already active.",
    "missing_compliance_documents": "Missing compliance documents: {docs}.",
    "restaurant_id_menu_required": "Restaurant ID and menu updates are required.",
    "restaurant_id_policies_required": "Restaurant ID and policies are required.",
    "menu_exceeds_max_items": "Menu exceeds maximum of {max} items.",
    "invalid_dietary_filters": "Invalid dietary filters provided.",
    "min_booking_hours": "Minimum booking hours must be at least {min}.",
    "max_booking_hours": "Maximum booking hours must not exceed {max}.",
    "negative_cancellation_window": "Cancellation window cannot be negative.",
    "missing_payment_details": "Booking ID, amount, and wallet ID are required.",
    "wallet_not_found": "Wallet not found.",
    "insufficient_funds": "Insufficient funds in wallet.",
    "invalid_payment_amount": "Amount must be between {min} and {max}.",
    "missing_split_payment_details": "Booking ID and payment details are required.",
    "booking_order_not_found": "Booking or associated order not found.",
    "split_amount_mismatch": "Split payment amounts do not match order total.",
    "missing_refund_details": "Booking ID and wallet ID are required.",
    "no_completed_payment": "No completed payment found for this booking.",
    "missing_booking_id": "Booking ID is required.",
    "missing_invitation_details": "Booking ID and friend IDs are required.",
    "group_size_exceeded": "Group size exceeds limit of {limit}.",
    "invalid_friend_ids": "Invalid friend IDs provided.",
    "missing_payment_splits": "Booking ID and payment splits are required.",
    "invalid_customer_ids": "Invalid customer IDs provided.",
    "payment_failed": "Payment processing failed."
  },
  "success": {
    "analytics_retrieved": "Booking analytics retrieved successfully.",
    "report_generated": "Booking report generated successfully.",
    "engagement_analyzed": "Customer engagement analyzed successfully.",
    "gamification_tracked": "Gamification metrics tracked successfully.",
    "bookings_monitored": "Booking statuses monitored successfully.",
    "table_recommended": "Table reassigned successfully.",
    "booking_closed": "Booking finalized successfully.",
    "table_rules_updated": "Table assignment rules updated successfully.",
    "gamification_rules_updated": "Gamification rules updated successfully.",
    "waitlist_settings_updated": "Waitlist settings updated successfully.",
    "pricing_rules_updated": "Pricing policy updated successfully.",
    "notification_settings_updated": "Notification triggers updated successfully.",
    "dispute_resolved": "Booking dispute resolved successfully.",
    "pre_order_status_updated": "Pre-order status updated successfully.",
    "dispute_status_updated": "Dispute status updated successfully.",
    "dispute_escalated": "Dispute escalated successfully.",
    "merchant_onboarding_approved": "Merchant onboarding approved successfully.",
    "menu_updated": "Menu updated successfully.",
    "reservation_policies_updated": "Reservation policies updated successfully.",
    "performance_monitored": "Performance metrics tracked successfully.",
    "payment_processed": "Payment processed successfully.",
    "split_payments_processed": "Split payments processed successfully.",
    "refunded": "Refund processed successfully.",
    "preorder_monitored": "Pre-order details retrieved successfully.",
    "invitations_sent": "Friend invitations sent successfully.",
    "party_payments_processed": "Party payments processed successfully."
  },
  "analytics": {
    "booking_analytics": "Booking analytics for restaurant {restaurantId} retrieved with {totalBookings} total bookings.",
    "booking_report_generated": "Booking report generated for restaurant {restaurantId}.",
    "engagement_customer": "Customer engagement analyzed for restaurant {restaurantId} with feedback rate {metricRate}%.",
    "gamification_metrics_tracked": "Gamification metrics tracked for restaurant {restaurantId} with {totalPoints} points."
  },
  "booking": {
    "table_reassigned": "Your booking has been reassigned to table {tableId}.",
    "completed": "Your booking for {restaurant} on {date} has been completed."
  },
  "configuration": {
    "table_rules_updated": "Table assignment rules updated for restaurant {restaurantId} with auto-assign set to {autoAssign}.",
    "notification_settings_updated": "Notification triggers updated for restaurant {restaurantId}."
  },
  "dispute": {
    "resolved": "Dispute {disputeId} has been resolved with {resolutionType}.",
    "pre_order_updated": "Pre-order dispute {disputeId} has been updated with {resolution}.",
    "status_updated": "Dispute {disputeId} status updated to {status}.",
    "escalated": "Dispute {disputeId} has been escalated for further review."
  },
  "merchant": {
    "onboarding_approved": "Merchant onboarding approved for merchant ID {merchantId}.",
    "menu_updated": "Menu updated successfully for restaurant {restaurantId}.",
    "reservation_policies_updated": "Reservation policies updated for restaurant {restaurantId}.",
    "performance_updated": "Performance metrics updated for merchant {merchantId}."
  },
  "payment": {
    "completed": "Payment of {amount} for booking {bookingId} completed successfully.",
    "split_completed": "Split payment of {amount} for booking {bookingId} completed successfully.",
    "refunded": "Refund of {amount} for booking {bookingId} processed successfully."
  },
  "preorder": {
    "status_updated": "Pre-order for booking {bookingId} updated to {status}.",
    "friend_invitation": "You are invited to booking {bookingId}: {message}.",
    "payment_processed": "Payment of {amount} for booking {bookingId} processed successfully."
  }
}